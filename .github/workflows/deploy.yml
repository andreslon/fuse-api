jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "VENDOR_API_BASE_URL=${{ secrets.VENDOR_API_BASE_URL }}" >> .env
          echo "VENDOR_API_KEY=${{ secrets.VENDOR_API_KEY }}" >> .env
          echo "SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}" >> .env
          echo "SENDER_EMAIL=${{ secrets.SENDER_EMAIL }}" >> .env
          echo "REPORT_RECIPIENT_EMAIL=${{ secrets.REPORT_RECIPIENT_EMAIL }}" >> .env
          echo "CRON_REPORT_EXPRESSION=${{ secrets.CRON_REPORT_EXPRESSION }}" >> .env
          echo "USE_REDIS=${{ secrets.USE_REDIS }}" >> .env
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> .env
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> .env
          echo "REDIS_CACHE_TTL=${{ secrets.REDIS_CACHE_TTL }}" >> .env
          echo "PULSAR_URL=${{ secrets.PULSAR_URL }}" >> .env
          echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env
          echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> .env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
          echo "DATABASE_SYNCHRONIZE=${{ secrets.DATABASE_SYNCHRONIZE }}" >> .env
          echo "DATABASE_LOGGING=${{ secrets.DATABASE_LOGGING }}" >> .env
          echo "DATABASE_SSL_REJECT_UNAUTHORIZED=${{ secrets.DATABASE_SSL_REJECT_UNAUTHORIZED }}" >> .env

      - name: Build and run Docker container
        run: |
          docker build -t my-app .
          docker run --env-file .env my-app 